read_str(A):-get0(X),r_str(X,A,[]).
r_str(10,A,A):-!.
r_str(X,A,B):-append(B,[X],B1),get0(X1),r_str(X1,A,B1).


:-dynamic pol/2.
pol_r(X,Y):-repeat,(pol(X,Y) -> (nl,write(X),nl,write(Y),write("."), retract(pol(X,Y))); X=nil, Y=nil).

pr_p_t:-tell('d:/GitHub/SWI-Prolog/Fukinator_lite_data/pol.txt'), pol_r(X,_), X=nil, told.       /*запись*/
pr_p_s:-see('d:/GitHub/SWI-Prolog/Fukinator_lite_data/pol.txt'), get0(Sym), read_pol(Sym), seen. /*чтение*/

read_pol(-1):-!.
read_pol(_):-read_str(Lang), name(X,Lang),read(Y),asserta(pol(X,Y)), get0(Sym),read_pol(Sym).


:-dynamic popad/2.
popad_r(X,Y):-repeat,(popad(X,Y) -> (nl,write(X),nl,write(Y),write("."), retract(popad(X,Y))) ;X=nil,Y=nil).

pr_pop_t:-tell('d:/GitHub/SWI-Prolog/Fukinator_lite_data/popad.txt'),popad_r(X,_),X=nil,told.
pr_pop_s:-see('d:/GitHub/SWI-Prolog/Fukinator_lite_data/popad.txt'), get0(Sym), read_popad(Sym),seen.

read_popad(-1):-!.
read_popad(_):- read_str(Lang),name(X,Lang),read(Y),asserta(popad(X,Y)),get0(Sym),read_popad(Sym).


:-dynamic garem/2.
garem_r(X,Y):-repeat,(garem(X,Y) -> (nl,write(X),nl,write(Y),write("."), retract(garem(X,Y))); X=nil, Y=nil).

pr_gar_t:-tell('d:/GitHub/SWI-Prolog/Fukinator_lite_data/garem.txt'), garem_r(X,_), X=nil, told.       /*запись*/
pr_gar_s:-see('d:/GitHub/SWI-Prolog/Fukinator_lite_data/garem.txt'), get0(Sym), read_garem(Sym), seen. /*чтение*/

read_garem(-1):-!.
read_garem(_):-read_str(Lang), name(X,Lang),read(Y),asserta(garem(X,Y)), get0(Sym),read_garem(Sym).


:-dynamic power/2.
power_r(X,Y):-repeat,(power(X,Y) -> (nl,write(X),nl,write(Y),write("."), retract(power(X,Y))); X=nil, Y=nil).

pr_pow_t:-tell('d:/GitHub/SWI-Prolog/Fukinator_lite_data/power.txt'), power_r(X,_), X=nil, told.       /*запись*/
pr_pow_s:-see('d:/GitHub/SWI-Prolog/Fukinator_lite_data/power.txt'), get0(Sym), read_power(Sym), seen. /*чтение*/

read_power(-1):-!.
read_power(_):-read_str(Lang), name(X,Lang),read(Y),asserta(power(X,Y)), get0(Sym),read_power(Sym).


:-dynamic gg/2.
gg_r(X,Y):-repeat,(gg(X,Y) -> (nl,write(X),nl,write(Y),write("."), retract(gg(X,Y))); X=nil, Y=nil).

pr_gg_t:-tell('d:/GitHub/SWI-Prolog/Fukinator_lite_data/gg.txt'), gg_r(X,_), X=nil, told.       /*запись*/
pr_gg_s:-see('d:/GitHub/SWI-Prolog/Fukinator_lite_data/gg.txt'), get0(Sym), read_gg(Sym), seen. /*чтение*/

read_gg(-1):-!.
read_gg(_):-read_str(Lang), name(X,Lang),read(Y),asserta(gg(X,Y)), get0(Sym),read_gg(Sym).


:-dynamic past/2.
past_r(X,Y):-repeat,(past(X,Y) -> (nl,write(X),nl,write(Y),write("."), retract(past(X,Y))); X=nil, Y=nil).

pr_past_t:-tell('d:/GitHub/SWI-Prolog/Fukinator_lite_data/past.txt'), past_r(X,_), X=nil, told.       /*запись*/
pr_past_s:-see('d:/GitHub/SWI-Prolog/Fukinator_lite_data/past.txt'), get0(Sym), read_past(Sym), seen. /*чтение*/

read_past(-1):-!.
read_past(_):-read_str(Lang), name(X,Lang),read(Y),asserta(past(X,Y)), get0(Sym),read_past(Sym).




question1(X1):-	write("Ваш персонаж мужского пола?"),nl,
                                write("0. Нет"),nl,
				write("1. Да"),nl,
				write("2. Нельзя точно сказать"),nl,
				read(X1).

question2(X2):-	write("Ваш персонаж перерождался каким-либо образом?"),nl,
				write("1. Да"),nl,
				write("0. Нет"),nl,
				read(X2).

question3(X3):-	write("У вашего персонажа есть свой гарем?"),nl,
				write("1. Да"),nl,
				write("0. Нет"),nl,
				read(X3).

question4(X4):-	write("Ваш персонаж обладает магическими или сверх силами?"),nl,
				write("1. Да"),nl,
				write("0. Нет"),nl,
				read(X4).

question5(X5):-	write("Ваш персонаж является главным героем?"),nl,
				write("1. Да"),nl,
				write("0. Нет"),nl,
				read(X5).

question6(X6):-	write("У вашего персонажа трагическое прошлое?"),nl,
				write("1. Да"),nl,
				write("0. Нет"),nl,
				read(X6).

/*question7(X7):- write("_____________________________________"),nl,
				write("1. Yes"),nl,
				write("0. NO"),nl,
				read(X7).*/





aki:-pret,

    pr_p_s, pr_pop_s, pr_gar_s, pr_pow_s, pr_gg_s, pr_past_s,

    question1(X1),question2(X2),question3(X3),question4(X4),question5(X5),question6(X6),prov(X1,X2,X3,X4,X5,X6).

prov(X1,X2,X3,X4,X5,X6):-otvet(X1,X2,X3,X4,X5,X6),!.
prov(X1,X2,X3,X4,X5,X6):-add(X1,X2,X3,X4,X5,X6).

otvet(X1,X2,X3,X4,X5,X6):-pol(X,X1),popad(X,X2),garem(X,X3),power(X,X4),gg(X,X5),past(X,X6),write("Ваш персонаж:\n"),write(X),!.

add(X1,X2,X3,X4,X5,X6):-
    write("Хорошо, ты меня победил. Я сдаюсь!"), nl,
    write("(Введите Имя (и Фамилию, если известна) персонажа и нажмите ENTER.)"), nl,get0(Qwqewqr), read_line_to_codes(user_input,Name),
    name(Q,Name), write(Name),nl,  asserta(pol(Q,X1)),   asserta(popad(Q,X2)),asserta(garem(Q,X3)),asserta(power(Q,X4)),
    asserta(gg(Q,X5)),asserta(past(Q,X6)),  reload,!.


reload:-pr_p_t, pr_pop_t, pr_gar_t, pr_pow_t, pr_gg_t, pr_past_t, pret,
        pr_p_s, pr_pop_s, pr_gar_s, pr_pow_s, pr_gg_s, pr_past_s.


pr_test:-read(X), (X is 1) -> (write("Yes")); write("No").

pret:-retractall(pol(X,Y)),retractall(popad(X,Y)),retractall(garem(X,Y)),retractall(power(X,Y)),retractall(gg(X,Y)),
        retractall(past(X,Y)).

